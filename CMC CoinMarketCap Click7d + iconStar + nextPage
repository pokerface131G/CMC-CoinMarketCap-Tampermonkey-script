
// ==UserScript==
// @name         CMC CoinMarketCap Click7d + iconStar + nextPage
// @namespace    http://tampermonkey.net/
// @version      3.1
// @description  Perform combined click actions on CoinMarketCap and navigate through pages
// @match        https://coinmarketcap.com/
// @match        https://coinmarketcap.com/?page=*
// @grant        none
// ==/UserScript==

//  主要流程是按顺序的。星标流程是 异步的。去除页面加载监听，可加快处理速度。
(function() {
    'use strict';

    // 配置
    const CONFIG = {
        starsToProcess: 2,
        maxPage: 3,
        delays: {
            initial: 7000,     // 初始等待时间
            Sort: 1000,        // 排序后等待时间. 调参完成。网速慢时，此值可能要增加点。注意 async function
            Star: 100,        // 缩小星标点击间隔，减少星标弹出页面的影响。处理此弹出页面较麻烦。干脆绕过。
            nextPage: 500     // 跳转前等待时间
        }
    };

    let currentPage = 1;

    //  7d% 列的排序
    function check7dSortStatus() {
        const sevenDayHeader = document.querySelector('p.sc-71024e3e-0.llNEXf');
        if (!sevenDayHeader) {
            console.log('未找到 7d% 列头');
            return null;
        }

        const headerCell = sevenDayHeader.closest('div[role="columnheader"]');
        if (!headerCell) {
            console.log('未找到列头单元格');
            return null;
        }

        const caretDown = headerCell.querySelector('.icon-Caret-down');
        const caretUp = headerCell.querySelector('.icon-Caret-up');

        if (caretDown) return 'down';
        else if (caretUp) return 'up';
        else return 'none';
    }

    async function click7dIfNeeded() {
        return new Promise(async (resolve) => {
            const status = check7dSortStatus();
            if (status !== 'down') {
                const elements = document.querySelectorAll('p.sc-71024e3e-0.llNEXf');
                for (let element of elements) {
                    if (element.textContent === '7d %') {
                        element.click();
                        console.log('点击 7d% 列完成');
                        // 等待并验证排序状态
                        await new Promise(r => setTimeout(r, CONFIG.delays.Sort));
                        const newStatus = check7dSortStatus();
                        if (newStatus !== 'down') {
                            console.log('排序未生效，重试...');
                            return click7dIfNeeded();
                        }
                    }
                }
            } else {
                console.log('7d% 列已经是降序，无需点击');
            }
            resolve();
        });
    }

    // 点击 7d% 列
    function click7dIfNeeded() {
        return new Promise(resolve => {
            const status = check7dSortStatus();
            if (status !== 'down') {
                const elements = document.querySelectorAll('p.sc-71024e3e-0.llNEXf');
                elements.forEach(element => {
                    if (element.textContent === '7d %') {
                        element.click();
                        console.log('点击 7d% 列完成');
                    }
                });
            } else {
                console.log('7d% 列已经是降序，无需点击');
            }
            setTimeout(resolve, CONFIG.delays.Sort);
        });
    }

    // 星标
    function processStars() {
        return new Promise(resolve => {
            const table = document.querySelector('.sc-7b3ac367-3.etbcea.cmc-table');
            if (!table) {
                console.log('未找到表格');
                resolve({ processed: 0, clicked: 0 });
                return;
            }

            const rows = Array.from(table.getElementsByTagName('tr'));
            let processedCount = 0;
            let clickedCount = 0;

            function processNextStar(index) {
                if (index >= rows.length || processedCount >= CONFIG.starsToProcess) {
                    console.log(`星标处理完成: 处理了 ${processedCount} 个，点击了 ${clickedCount} 个`);
                    resolve({ processed: processedCount, clicked: clickedCount });
                    return;
                }

                const filledStar = rows[index].querySelector('.icon-Star-Filled');
                const emptyStar = rows[index].querySelector('.icon-Star');

                if (filledStar) {
                    console.log(`跳过第 ${processedCount + 1} 个已填充的星标`);
                    processedCount++;
                    setTimeout(() => processNextStar(index + 1), CONFIG.delays.Star);
                } else if (emptyStar) {
                    emptyStar.click();
                    console.log(`点击第 ${processedCount + 1} 个未填充的星标`);
                    clickedCount++;
                    processedCount++;
                    setTimeout(() => processNextStar(index + 1), CONFIG.delays.Star);
                } else {
                    setTimeout(() => processNextStar(index + 1), CONFIG.delays.Star);
                }
            }

            processNextStar(0);
        });
    }

    // 下一页
    function handleNextPage() {
        const urlParams = new URLSearchParams(window.location.search);
        currentPage = parseInt(urlParams.get('page')) || 1;

        if (currentPage < CONFIG.maxPage) {
            const nextPage = currentPage + 1;
            const nextUrl = `https://coinmarketcap.com/?page=${nextPage}`;
            console.log(`正在跳转到第 ${nextPage} 页:`, nextUrl);
            setTimeout(() => {
                window.location.href = nextUrl;
            }, CONFIG.delays.nextPage);
        } else {
            console.log('所有页面处理完成');
        }
    }

    // 主流程
    async function main() {
        console.log('等待页面加载...');
        await new Promise(resolve => setTimeout(resolve, CONFIG.delays.initial));
        console.log('初始等待完成，开始处理...');

        // 按顺序执行各个步骤
        await click7dIfNeeded();
        await processStars();
        handleNextPage();
    }

    // 页面加载完成后执行主流程
    main();
})();
